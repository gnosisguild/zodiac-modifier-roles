name: Prod Release Deployment

on:
  release:
    types: created

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Prod
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
            .yarn/install-state.gz
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
      - run: yarn
      - run: yarn prepare
      - run: yarn build

      - name: Pin to IPFS
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@39bbda1ce1fe24c69c6f57861b8038278d53688d
        with:
          pin-name: Zodiac Roles App - Prod â€” ${ GITHUB_SHA }
          path: "./packages/app/build"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Pin to Crust
        uses: crustio/ipfs-crust-action@v2.0.3
        continue-on-error: true
        timeout-minutes: 2
        with:
          cid: ${{ steps.upload.outputs.hash }}
          seeds: ${{ secrets.CRUST_SEEDS }}

      - name: Convert CIDv0 to CIDv1
        id: convert_cidv0
        uses: uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      # - name: Update DNS with new IPFS hash
      #   env:
      #     CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      #     RECORD_DOMAIN: "gnosisguild.org"
      #     RECORD_NAME: "_dnslink.roles"
      #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      #   uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
      #   with:
      #     cid: ${{ steps.upload.outputs.hash }}

      - name: update release
        id: update_release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          is_append_body: true
          body: |
            <br />
            IPFS hash of the deployment:
            - CIDv0: `${{ steps.upload.outputs.hash }}`
            - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`

            IPFS gateways:
              - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
              - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/

      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: ./packages/app/build

      # - name: Prep graph cli for deployment
      #   working-directory: packages/subgraph
      #   run: yarn run graph auth --product hosted-service ${{ secrets.GRAPH_ACCESS_TOKEN }}

      # - name: Deploy subgraphs
      #   working-directory: packages/subgraph
      #   env:
      #     HOSTED_SERVICE_SUBGRAPH__GNOSIS_CHAIN: jfschwarz/zodiac-roles-mod-gnosis-chain
      #     HOSTED_SERVICE_SUBGRAPH__ARBITRUM_ONE: jfschwarz/zodiac-roles-mod-arbitrum
      #     HOSTED_SERVICE_SUBGRAPH__AVALANCHE: jfschwarz/zodiac-roles-mod-avalanche
      #     HOSTED_SERVICE_SUBGRAPH__BSC: jfschwarz/zodiac-roles-mod-bsc
      #     HOSTED_SERVICE_SUBGRAPH__MAINNET: jfschwarz/zodiac-roles-mod-mainnet
      #     HOSTED_SERVICE_SUBGRAPH__OPTIMISM: jfschwarz/zodiac-roles-mod-optimism
      #     HOSTED_SERVICE_SUBGRAPH__POLYGON: jfschwarz/zodiac-roles-mod-polygon
      #     # HOSTED_SERVICE_SUBGRAPH__OPTIMISM_ON_GNOSIS_CHAIN: jfschwarz/zodiac-roles-mod_optimism-on-gnosis-chain
      #   run: |
      #     yarn deploy:arbitrum-one
      #     yarn deploy:gnosis-chain
      #     yarn deploy:avalanche
      #     yarn deploy:bsc
      #     yarn deploy:mainnet
      #     yarn deploy:optimism
      #     yarn deploy:polygon
      #     # yarn deploy:optimism-on-gnosis-chain
