specVersion: 1.3.0
schema:
  file: ./schema.graphql
indexerHints:
  prune: never # allow time travel queries to allow querying historic permissions
dataSources:
  - kind: ethereum
    name: Roles
    # prettier-ignore
    network: {{network}}
    source:
      abi: Roles
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - RolesModifier
        - Role
        - Member
        - RoleAssignment
      abis:
        - name: Roles
          file: ./abis/Roles.sol/Roles.json
      eventHandlers:
        - event: RolesModSetup(indexed address,indexed address,indexed address,address)
          handler: handleRolesModSetup
        - event: AssignRoles(address,bytes32[],bool[])
          handler: handleAssignRoles
        - event: DisabledModule(address)
          handler: handleDisabledModule
        - event: EnabledModule(address)
          handler: handleEnabledModule
        - event: SetDefaultRole(address,bytes32)
          handler: handleSetDefaultRole
        - event: AvatarSet(indexed address,indexed address)
          handler: handleAvatarSet
        - event: TargetSet(indexed address,indexed address)
          handler: handleTargetSet
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
      file: ./src/roles.mapping.ts
  - kind: ethereum
    name: PermissionBuilder
    # prettier-ignore
    network: {{network}}
    source:
      abi: PermissionBuilder
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - RolesModifier
        - Role
        - Target
        - Function
        - Condition
        - Allowance
      abis:
        - name: PermissionBuilder
          file: ./abis/PermissionBuilder.sol/PermissionBuilder.json
      eventHandlers:
        - event: AllowTarget(bytes32,address,uint8)
          handler: handleAllowTarget
        - event: ScopeTarget(bytes32,address)
          handler: handleScopeTarget
        - event: RevokeTarget(bytes32,address)
          handler: handleRevokeTarget
        - event: AllowFunction(bytes32,address,bytes4,uint8)
          handler: handleAllowFunction
        - event: ScopeFunction(bytes32,address,bytes4,(uint8,uint8,uint8,bytes)[],uint8)
          handler: handleScopeFunction
        - event: RevokeFunction(bytes32,address,bytes4)
          handler: handleRevokeFunction
        - event: SetAllowance(bytes32,uint128,uint128,uint128,uint64,uint64)
          handler: handleSetAllowance
      file: ./src/permissions.mapping.ts
  - kind: ethereum
    name: AllowanceTracker
    # prettier-ignore
    network: {{network}}
    source:
      abi: AllowanceTracker
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Allowance
      abis:
        - name: AllowanceTracker
          file: ./abis/AllowanceTracker.sol/AllowanceTracker.json
      eventHandlers:
        - event: ConsumeAllowance(bytes32,uint128,uint128)
          handler: handleConsumeAllowance
      file: ./src/allowances.mapping.ts
  - kind: ethereum
    name: Periphery
    # prettier-ignore
    network: {{network}}
    source:
      abi: Periphery
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UnwrapAdapter
      abis:
        - name: Periphery
          file: ./abis/Periphery.sol/Periphery.json
      eventHandlers:
        - event: SetUnwrapAdapter(address,bytes4,address)
          handler: handleSetUnwrapAdapter
      file: ./src/periphery.mapping.ts
  - kind: ethereum
    name: Poster
    # prettier-ignore
    network: {{network}}
    source:
      address: "0x000000000000cd17345801aa8147b8D3950260FF"
      abi: Poster
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - NewPost
      abis:
        - name: Poster
          file: ./abisExternal/Poster.json
      eventHandlers:
        - event: NewPost(indexed address,string,indexed string)
          handler: handleNewPost
      file: ./src/poster.mapping.ts
